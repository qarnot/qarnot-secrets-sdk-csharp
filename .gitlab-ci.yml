variables:
  DOTNET_IMAGE: mcr.microsoft.com/dotnet/sdk:6.0

# Start a MR pipeline when pushing to a branch that has an open MR
# Do not start the branch pipeline if the branch already has a MR. This prevent
# a push to trigger both branch- and merge- pipelines at the same time.
workflow:
  rules:
    # Run pipelines triggered from the web UI
    - if: $CI_PIPELINE_SOURCE == "web"
    # Run pipelines when triggered by webhooks or by API calls (for Draft: workaround)
    - if: $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "api"
    # Do not run pipelines on *-nocheck branches, even in a MR
    - if: $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ /-nocheck$/
      when: never
    # Run pipelines on MR
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    # Run pipelines only on master branch
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    # Run pipelines on tags
    - if: $CI_COMMIT_TAG

build-job:
  stage: build
  image: $DOTNET_IMAGE
  script:
    - dotnet build -c Release QarnotSDK.Secrets -o bin/Release
  artifacts:
    when: always
    paths:
      - bin/Release/QarnotSDK.Secrets.dll
    expire_in: 1hour

integration-tests-job:
  stage: test
  image: $DOTNET_IMAGE
  script:
    - apt-get update -y && apt-get install -y make python3
    # Redirect everything to stderr to keep the output, before checking the expected
    # outcome.
    - make -C QarnotSDK.Secrets.Tests | tee /dev/stderr |  grep '^PASSED:' > /dev/null

run-example-job:
  stage: test
  image: $DOTNET_IMAGE
  script:
    # Redirect everything to stderr to keep the output, before checking the expected
    # outcome.
    - dotnet run --project QarnotSDK.Secrets.Example | tee /dev/stderr | grep '^Secret' > /dev/null
